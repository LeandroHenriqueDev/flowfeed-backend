generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id        Int       @id @default(autoincrement())
  post_id   Int?
  user_id   Int?
  text      String
  posted_at DateTime? @default(now()) @db.Timestamp(6)
  posts     posts?    @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users     users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model likes {
  id      Int    @id @default(autoincrement())
  post_id Int?
  user_id Int?
  posts   posts? @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users   users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([post_id, user_id])
}

model posts {
  id          Int        @id @default(autoincrement())
  user_id     Int
  description String
  image_url   String?
  posted_at   DateTime?  @default(now()) @db.Timestamp(6)
  comments    comments[]
  likes       likes[]
  users       users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id              Int        @id @default(autoincrement())
  name            String
  email           String     @unique
  password_hash   String
  profile_picture String?
  created_at      DateTime?  @default(now()) @db.Timestamp(6)
  comments        comments[]
  likes           likes[]
  posts           posts[]
}
